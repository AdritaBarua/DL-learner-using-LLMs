
1. family_benchmark (without basename)
prompt = f"""
Take the given ontology as the knowledge base: {kb_text}.

Use this knowledge base to extract complex class expressions for the given positive and negative examples. A complex class expression is an OWL class expression that consists of the classes and properties that apply to the positive examples but not to the negative examples.
Use Manchester syntax for the complex class expressions. 
For example:
If the positive examples are:
(F2M13, F2M18, F2M11, F2M32, F3M44, F3M45, F5M64, F6M71, F6M81, F6M90, F6M100, F6M92, F7M113, F7M117, F7M115, F7M125, F7M123, F7M131, F9M151, F9M153, F9M159, F9M166, F9M162, F9M157, F9M167, F10M173, F10M183, F10M184, F10M188, F10M199)

And the negative examples are:
(F10M196, F1M8, F7F103, F3F41, F1M1, F9F164, F9M149, F9M147, F9F158, F2F12, F1F5, F6M88, F7M104, F7M109, F7M120, F6F83, F6M78, F3M47, F10F174, F6F76, F2F26, F6F89, F3M50, F3F42, F6F79, F10M194, F2F19, F2F24, F9F154, F4F58)

Then the complex class expression generated by DL-Learner is(first 5 are shown):
1: Male and (hasSibling some Thing) (pred. acc.: 100.00%, F-measure: 100.00%)
2: Male and (hasParent some Thing) (pred. acc.: 95.00%, F-measure: 95.24%)
3: Male (pred. acc.: 80.00%, F-measure: 83.33%)
4: not (Female) (pred. acc.: 80.00%, F-measure: 83.33%)
5: Person and (not (Female)) (pred. acc.: 80.00%, F-measure: 83.33%)

All the class expressions are generated using the Closed World Assumption of the knowledge base.

Now, perform a logical reasoning based on the knowledge base to find the shortest complex class expressions for the following examples:

Positive examples: {pos_arg}
Negative examples: {neg_arg}
Generate the complex class expression for {base}.
{feedback} 
Don't give me any description just the shortest complex class expressions(upto first 5) and follow the example format:
"""

2. trains

prompt = f"""
Take the given ontology as the knowledge base: {kb_text}.

Use this knowledge base to extract complex class expressions for the given positive and negative examples. A complex class expression is an OWL class expression that consists of the classes and properties that apply to the positive examples but not to the negative examples.
Use Manchester syntax for the complex class expressions. 
For example:
If the positive examples are:
(east1, east2, east3, east4, east5)

And the negative examples are:
(west6, west7, west8, west9, west10)

Then the complex class expression generated by DL-Learner is(first 5 are shown):
1: hasCar some (ClosedCar and ShortCar) (accuracy 100%, length 5, depth 1)
2: Train and (hasCar some (ClosedCar and ShortCar)) (accuracy 100%, length 7, depth 1)
3: (not (ClosedCar)) and (hasCar some (ClosedCar and ShortCar)) (accuracy 100%, length 8, depth 1)
4: (not (DoubleCar)) and (hasCar some (ClosedCar and ShortCar)) (accuracy 100%, length 8, depth 1)
5: (not (JaggedCar)) and (hasCar some (ClosedCar and ShortCar)) (accuracy 100%, length 8, depth 1)

All the class expressions are generated using the Closed World Assumption of the knowledge base.

Now perform logical reasoning on the knowledge base to find the shortest complex class expressions for the following examples. A “shortest” class expression consists of the minimal set of classes for which the expression holds true.
Positive examples: {pos_arg}
Negative examples: {neg_arg}
{feedback} 
Don't give me any description just the shortest complex class expressions(upto first 5) and follow the example format:
"""

3. basic_family (with basename)
prompt = f"""
Take the given ontology as the knowledge base: {kb_text}.

Use this knowledge base to extract complex class expressions for the given positive and negative examples. A complex class expression is an OWL class expression that consists of the classes and properties that apply to the positive examples but not to the negative examples.
Use Manchester syntax for the complex class expressions. 
For example:
If the positive examples are:
(Dino, Luigi, Mauro, Francesco, Giuseppe)

And the negative examples are:
(Antonella, Giovanna, Maria, Marisella, Milly, Nella, NonnaLina, Ombretta, Rosanna, Serena, Valentina, Luca)

Then the complex class expression generated by DL-Learner is(first 5 are shown):
1: Male and (hasSibling some Thing) (accuracy 100%, length 5, depth 1)
2: Male and ((not (Male)) or (hasSibling some Thing)) (accuracy 100%, length 8, depth 1)
3: Male and ((hasChild some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
4: Male and ((hasSibling some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
5: Male and ((hasSibling some Thing) or (hasParent max 1 Thing)) (accuracy 100%, length 10, depth 1)

All the class expressions are generated using the Closed World Assumption of the knowledge base.

Now, perform a logical reasoning based on the knowledge base to find the shortest complex class expressions for the following examples:

Positive examples: {pos_arg}
Negative examples: {neg_arg}
Generate the complex class expression for {base}.
{feedback} 
Don't give me any description just the shortest complex class expressions(upto first 5) and follow the example format:
"""



4. basic_family changed_gender(without basename)
prompt = f"""
Take the given ontology as the knowledge base: {kb_text}.

Use this knowledge base to extract complex class expressions for the given positive and negative examples. A complex class expression is an OWL class expression that consists of the classes and properties that apply to the positive examples but not to the negative examples.
Use Manchester syntax for the complex class expressions. 
For example:
If the positive examples are:
(Dino, Luigi, Mauro, Francesco, Giuseppe)

And the negative examples are:
(Antonella, Giovanna, Maria, Marisella, Milly, Nella, NonnaLina, Ombretta, Rosanna, Serena, Valentina, Luca)

Then the complex class expression generated by DL-Learner is(first 5 are shown):
1: Female and (hasSibling some Thing) (accuracy 100%, length 5, depth 1)
2: Female and ((not (Female)) or (hasSibling some Thing)) (accuracy 100%, length 8, depth 1)
3: Female and ((hasChild some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
4: Female and ((hasSibling some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
5: Female and ((hasSibling some Thing) or (hasParent max 1 Thing)) (accuracy 100%, length 10, depth 1)

All the class expressions are generated using the Closed World Assumption of the knowledge base.

Now, perform a logical reasoning based on the knowledge base to find the shortest complex class expressions for the following examples:

Positive examples: {pos_arg}
Negative examples: {neg_arg}
{feedback} 
Don't give me any description just the shortest complex class expressions(upto first 5) and follow the example format:
"""

5. basic_family changed_relations
# Daughter -> Son
# Father -> Mother 
# GrandFather -> GrandMother 
# GrandMother -> GrandFather
# GrandParent -> Uncle
# Offspring -> Aunt
# Parent -> Children 
# Sibling -> Friend
# Sister -> Brother
prompt = f"""
Take the given ontology as the knowledge base: {kb_text}.

Use this knowledge base to extract complex class expressions for the given positive and negative examples. A complex class expression is an OWL class expression that consists of the classes and properties that apply to the positive examples but not to the negative examples.
Use Manchester syntax for the complex class expressions. 
For example:
If the positive examples are:
(Dino, Luigi, Mauro, Francesco, Giuseppe)

And the negative examples are:
(Antonella, Giovanna, Maria, Marisella, Milly, Nella, NonnaLina, Ombretta, Rosanna, Serena, Valentina, Luca)

Then the complex class expression generated by DL-Learner is(first 5 are shown):
1: Male and (hasSibling some Thing) (accuracy 100%, length 5, depth 1)
2: Male and ((not (Male)) or (hasSibling some Thing)) (accuracy 100%, length 8, depth 1)
3: Male and ((hasChild some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
4: Male and ((hasSibling some Thing) or (hasSibling some Thing)) (accuracy 100%, length 9, depth 1)
5: Male and ((hasSibling some Thing) or (hasParent max 1 Thing)) (accuracy 100%, length 10, depth 1)

All the class expressions are generated using the Closed World Assumption of the knowledge base.

Now, perform a logical reasoning based on the knowledge base to find the shortest complex class expressions for the following examples:

Positive examples: {pos_arg}
Negative examples: {neg_arg}
Generate the complex class expression for {base}.
{feedback} 
Don't give me any description just the shortest complex class expressions(upto first 5) and follow the example format:
"""

