// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F1F5"
,"ex:F1F7"
,"ex:F2F17"
,"ex:F2F15"
,"ex:F2F33"
,"ex:F2F30"
,"ex:F2F38"
,"ex:F3F49"
,"ex:F3F52"
,"ex:F3F53"
,"ex:F4F58"
,"ex:F6F79"
,"ex:F6F83"
,"ex:F6F86"
,"ex:F6F89"
,"ex:F6F87"
,"ex:F6F96"
,"ex:F6F97"
,"ex:F6F94"
,"ex:F7F108"
,"ex:F7F106"
,"ex:F7F118"
,"ex:F7F119"
,"ex:F7F129"
,"ex:F7F127"
,"ex:F7F121"
,"ex:F9F145"
,"ex:F9F148"
,"ex:F9F150"
,"ex:F9F143"
,"ex:F9F164"
,"ex:F9F169"
,"ex:F10F175"
,"ex:F10F177"
,"ex:F10F192"
,"ex:F10F193"
,"ex:F10F201"
}

lp.negativeExamples = {
"ex:F10F195"
,"ex:F2M37"
,"ex:F2M16"
,"ex:F7M123"
,"ex:F5M60"
,"ex:F9F152"
,"ex:F2M13"
,"ex:F9M147"
,"ex:F6F77"
,"ex:F2F14"
,"ex:F2F19"
,"ex:F2F22"
,"ex:F6F84"
,"ex:F5F65"
,"ex:F9M162"
,"ex:F7M122"
,"ex:F7M130"
,"ex:F10M196"
,"ex:F2M35"
,"ex:F6M88"
,"ex:F6F74"
,"ex:F9F163"
,"ex:F7F126"
,"ex:F9M157"
,"ex:F10M202"
,"ex:F10M188"
,"ex:F9M155"
,"ex:F10M183"
,"ex:F7M112"
,"ex:F10F185"
,"ex:F8M136"
,"ex:F7M102"
,"ex:F3F46"
,"ex:F7M131"
,"ex:F9M149"
,"ex:F5M68"
,"ex:F4M57"
}
DL-Learner command line interface
Initializing component 'ks' of type OWL File ...
... initialized component 'ks' in 1ms. Status: OK
Initializing component 'reasoner' of type closed world reasoner ...
Loaded reasoner: Pellet (com.clarkparsia.pellet.owlapiv3.PelletReasoner)
Materializing TBox...
materialising concepts

[.....] 0%
[.....] 14%
[=....] 28%materialising object properties ...

[==...] 42%
[==...] 57%
[===..] 71%
[====.] 85%materialising datatype properties
...TBox materialised in 73 ms.
... initialized component 'reasoner' in 625ms. Status: OK
Initializing component 'lp' of type PosNegLPStandard ...
... initialized component 'lp' in 0ms. Status: OK
Initializing component 'alg' of type OWL Class Expression Learner ...
... initialized component 'alg' in 40ms. Status: OK
Running algorithm instance "alg" (OCEL)
starting top down refinement with: Thing (50% accuracy)
more accurate (82.43%) class expression found: Female
more accurate (94.59%) class expression found: Female and (hasParent some Thing)
more accurate (100.00%) class expression found: Female and (hasParent some (hasParent some Thing))
Maximum time (10 seconds) reached, stopping now...
solutions (at most 20 are shown):
1: Female and (hasParent some (hasParent some Thing)) (accuracy 100%, length 7, depth 2)
2: Female and (hasParent some (hasParent some Person)) (accuracy 100%, length 7, depth 2)
3: Female and (hasParent some (hasParent some Female)) (accuracy 100%, length 7, depth 2)
4: Female and (hasParent some (hasParent some Male)) (accuracy 100%, length 7, depth 2)
5: Female and (hasParent some (hasParent some (not (Female)))) (accuracy 100%, length 8, depth 2)
6: Female and (hasParent some (hasParent some (not (Male)))) (accuracy 100%, length 8, depth 2)
7: Female and (hasParent some (hasParent some (hasChild some Thing))) (accuracy 100%, length 9, depth 3)
8: Female and (hasParent some (hasParent some (married some Thing))) (accuracy 100%, length 9, depth 3)
9: Female and (hasParent some (hasParent min 2 Thing)) (accuracy 100%, length 8, depth 2)
10: Female and Person and (hasParent some (hasParent some Thing)) (accuracy 100%, length 9, depth 2)
11: Female and (hasParent some (Person and (hasParent some Thing))) (accuracy 100%, length 9, depth 2)
12: Female and (hasParent some (hasParent some (Person or Person))) (accuracy 100%, length 9, depth 2)
13: Female and (hasParent some (hasParent some (hasChild only Thing))) (accuracy 100%, length 9, depth 3)
14: Female and (hasParent some (hasParent some (hasParent only Thing))) (accuracy 100%, length 9, depth 3)
15: Female and (hasParent some (hasParent some (hasSibling only Thing))) (accuracy 100%, length 9, depth 3)
16: Female and (hasParent some (hasParent some (married only Thing))) (accuracy 100%, length 9, depth 3)
17: Female and (hasParent some (hasParent some (married some Person))) (accuracy 100%, length 9, depth 3)
18: Female and (hasParent some (hasParent some (married some Female))) (accuracy 100%, length 9, depth 3)
19: Female and (hasParent some (hasParent some (married some Male))) (accuracy 100%, length 9, depth 3)
20: Female and (hasParent some (hasParent some (hasChild some Person))) (accuracy 100%, length 9, depth 3)
Algorithm stopped (26937 descriptions tested).

