// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.benchmark.org/family#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "family-benchmark.owl"

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// CELOE
/*
alg.type = "celoe"
alg.terminateOnNoiseReached = true
*/

// OCEL
alg.type = "ocel"

// ELTL
// alg.type = "eltl"

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = { 
"ex:F2M20"
,"ex:F2M29"
,"ex:F2M9"
,"ex:F3M45"
,"ex:F3M43"
,"ex:F3M40"
,"ex:F5M60"
,"ex:F6M92"
,"ex:F6M69"
,"ex:F7M107"
,"ex:F7M122"
,"ex:F7M104"
,"ex:F7M102"
,"ex:F8M132"
,"ex:F9M142"
,"ex:F9M139"
,"ex:F10M171"
}

lp.negativeExamples = {
"ex:F10M190"
,"ex:F9F169"
,"ex:F9F168"
,"ex:F7F106"
,"ex:F7M128"
,"ex:F7F129"
,"ex:F7F105"
,"ex:F10M182"
,"ex:F2F17"
,"ex:F2M34"
,"ex:F7M120"
,"ex:F6M81"
,"ex:F6F101"
,"ex:F8M134"
,"ex:F7M109"
,"ex:F3F53"
,"ex:F10M173"
}
DL-Learner command line interface
Initializing component 'ks' of type OWL File ...
... initialized component 'ks' in 1ms. Status: OK
Initializing component 'reasoner' of type closed world reasoner ...
Loaded reasoner: Pellet (com.clarkparsia.pellet.owlapiv3.PelletReasoner)
Materializing TBox...
materialising concepts

[.....] 0%
[.....] 14%
[=....] 28%materialising object properties ...

[==...] 42%
[==...] 57%
[===..] 71%
[====.] 85%materialising datatype properties
...TBox materialised in 74 ms.
... initialized component 'reasoner' in 626ms. Status: OK
Initializing component 'lp' of type PosNegLPStandard ...
... initialized component 'lp' in 0ms. Status: OK
Initializing component 'alg' of type OWL Class Expression Learner ...
... initialized component 'alg' in 37ms. Status: OK
Running algorithm instance "alg" (OCEL)
starting top down refinement with: Thing (50% accuracy)
more accurate (73.53%) class expression found: Male
more accurate (79.41%) class expression found: Male and (hasChild some Thing)
more accurate (94.12%) class expression found: Male and (hasChild some (hasChild some Thing))
more accurate (100.00%) class expression found: Male and (hasChild some (hasChild some (married some Thing)))
Maximum time (10 seconds) reached, stopping now...
solutions (at most 20 are shown):
1: Male and (hasChild some (hasChild some (hasChild some Thing))) (accuracy 100%, length 9, depth 3)
2: Male and (hasChild some (hasChild some (married some Thing))) (accuracy 100%, length 9, depth 3)
3: Male and (hasChild some (hasChild some (married some Person))) (accuracy 100%, length 9, depth 3)
4: Male and (hasChild some (hasChild some (hasChild some Person))) (accuracy 100%, length 9, depth 3)
5: Male and (hasChild some (hasChild some (married some (hasChild some Thing)))) (accuracy 100%, length 11, depth 4)
6: Male and (hasChild some (hasChild some (married some (married some Thing)))) (accuracy 100%, length 11, depth 4)
7: Male and (hasChild some (hasChild some (hasChild some (hasParent some Thing)))) (accuracy 100%, length 11, depth 4)
8: Male and Person and (hasChild some (hasChild some (married some Thing))) (accuracy 100%, length 11, depth 3)
9: Male and (hasChild some (Person and (hasChild some (married some Thing)))) (accuracy 100%, length 11, depth 3)
10: Male and (hasChild some (hasChild some (Person and (married some Thing)))) (accuracy 100%, length 11, depth 3)
11: Male and (hasChild some (hasChild some (married some (Person or Person)))) (accuracy 100%, length 11, depth 3)
12: Male and (hasChild some (hasChild some (married some (hasChild only Thing)))) (accuracy 100%, length 11, depth 4)
13: Male and (hasChild some (hasChild some (married some (hasParent only Thing)))) (accuracy 100%, length 11, depth 4)
14: Male and (hasChild some (hasChild some (married some (hasSibling only Thing)))) (accuracy 100%, length 11, depth 4)
15: Male and (hasChild some (hasChild some (married some (married only Thing)))) (accuracy 100%, length 11, depth 4)
16: Male and Person and (hasChild some (hasChild some (hasChild some Thing))) (accuracy 100%, length 11, depth 3)
17: Male and (hasChild some (Person and (hasChild some (hasChild some Thing)))) (accuracy 100%, length 11, depth 3)
18: Male and (hasChild some (hasChild some (Person and (hasChild some Thing)))) (accuracy 100%, length 11, depth 3)
19: Male and (hasChild some (hasChild some (hasChild some (Person or Person)))) (accuracy 100%, length 11, depth 3)
20: Male and (hasChild some (hasChild some (hasChild some (hasChild only Thing)))) (accuracy 100%, length 11, depth 4)
Algorithm stopped (37185 descriptions tested).

