/******************
Example taken from yingyang
GrandFather
******************/
prefixes = [ ("kb","http://www.csc.liv.ac.uk/~luigi/ontologies/basicFamily#") ]
 
// knowledge source definition 
ks.type = "OWL File"
ks.fileName = "basicFamily.owl" 

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {
"kb:NonnoLuigi",
"kb:Isidoro",
"kb:Gianni"
}
lp.negativeExamples = {
"kb:Giovanna",
"kb:Marisella",
"kb:Ombretta",
"kb:Serena",
"kb:Valentina",
"kb:Luca",
"kb:Luigi",
"kb:Dino",
"kb:Maria",
"kb:Mauro",
"kb:Nella",
"kb:Miriam",
"kb:NonnaLina",
"kb:Carmela"
}

// algorithm settings
alg.type = "ocel"
alg.useTooWeakList = true
alg.maxExecutionTimeInSeconds = 10

DL-Learner command line interface
Initializing component 'ks' of type OWL File ...
... initialized component 'ks' in 1ms. Status: OK
Initializing component 'reasoner' of type closed world reasoner ...
Could not initialize component "closed world reasoner"
An Error Has Occurred During Processing.
/Users/adrita/Downloads/experimental_data_2/basicFamily.owl (No such file or directory)
Terminating DL-Learner...and writing stacktrace to: log/error.log
/******************
Example taken from yingyang
GrandFather
******************/
prefixes = [ ("kb","http://www.csc.liv.ac.uk/~luigi/ontologies/basicFamily#") ]
 
// knowledge source definition 
ks.type = "OWL File"
ks.fileName = "basicFamily.owl" 

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {
"kb:NonnoLuigi",
"kb:Isidoro",
"kb:Gianni"
}
lp.negativeExamples = {
"kb:Giovanna",
"kb:Marisella",
"kb:Ombretta",
"kb:Serena",
"kb:Valentina",
"kb:Luca",
"kb:Luigi",
"kb:Dino",
"kb:Maria",
"kb:Mauro",
"kb:Nella",
"kb:Miriam",
"kb:NonnaLina",
"kb:Carmela"
}

// algorithm settings
alg.type = "ocel"
alg.useTooWeakList = true
alg.maxExecutionTimeInSeconds = 10

DL-Learner command line interface
Initializing component 'ks' of type OWL File ...
... initialized component 'ks' in 2ms. Status: OK
Initializing component 'reasoner' of type closed world reasoner ...
Loaded reasoner: Pellet (com.clarkparsia.pellet.owlapiv3.PelletReasoner)
Materializing TBox...
materialising concepts

[.....] 0%
[.....] 16%
[=....] 33%materialising object properties ...

[==...] 50%
[===..] 66%
[====.] 83%materialising datatype properties
...TBox materialised in 51 ms.
... initialized component 'reasoner' in 393ms. Status: OK
Initializing component 'lp' of type PosNegLPStandard ...
... initialized component 'lp' in 0ms. Status: OK
Initializing component 'alg' of type OWL Class Expression Learner ...
... initialized component 'alg' in 19ms. Status: OK
Running algorithm instance "alg" (OCEL)
starting top down refinement with: Thing (17.647% accuracy)
more accurate (76.47%) class expression found: Female
more accurate (88.24%) class expression found: Female and (hasChild some Thing)
more accurate (94.12%) class expression found: Female and (hasParent max 1 Thing)
more accurate (100.00%) class expression found: Female and (hasChild some (hasChild some Thing))
Maximum time (10 seconds) reached, stopping now...
solutions (at most 20 are shown):
1: Female and (hasChild some (hasChild some Thing)) (accuracy 100%, length 7, depth 2)
2: Female and (hasChild some (hasChild some Female)) (accuracy 100%, length 7, depth 2)
3: Female and (hasChild some (hasChild some (not (Male)))) (accuracy 100%, length 8, depth 2)
4: Female and (hasChild some (hasChild some (hasParent some Thing))) (accuracy 100%, length 9, depth 3)
5: Female and Person and (hasChild some (hasChild some Thing)) (accuracy 100%, length 9, depth 2)
6: Female and (hasChild some (hasChild some (Female or Female))) (accuracy 100%, length 9, depth 2)
7: Female and (hasChild some (hasChild some (Female or Male))) (accuracy 100%, length 9, depth 2)
8: Female and (hasChild some (hasChild some (hasChild only Thing))) (accuracy 100%, length 9, depth 3)
9: Female and (hasChild some (hasChild some (hasParent only Thing))) (accuracy 100%, length 9, depth 3)
10: Female and (hasChild some (hasChild some (hasSibling only Thing))) (accuracy 100%, length 9, depth 3)
11: Female and (not (Male)) and (hasChild some (hasChild some Thing)) (accuracy 100%, length 10, depth 2)
12: Female and (hasChild some Thing) and (hasChild some (hasChild some Thing)) (accuracy 100%, length 11, depth 2)
13: Female and (hasChild some ((hasChild some Thing) and (hasChild some Thing))) (accuracy 100%, length 11, depth 2)
14: Female and (hasChild some ((hasChild some Thing) and (hasParent some Thing))) (accuracy 100%, length 11, depth 2)
15: Female and (hasChild some (hasChild some (Female or (not (Female))))) (accuracy 100%, length 10, depth 2)
16: Female and (hasChild some (hasChild some (Female or (not (Male))))) (accuracy 100%, length 10, depth 2)
17: Female and (hasChild some (hasChild some (Female or (hasChild some Thing)))) (accuracy 100%, length 11, depth 3)
18: Female and (hasChild some (hasChild some (Female or (hasParent some Thing)))) (accuracy 100%, length 11, depth 3)
19: Female and (hasChild some (hasChild some (Female or (hasSibling some Thing)))) (accuracy 100%, length 11, depth 3)
20: Female and (hasChild some (hasChild some (Male or (not (Male))))) (accuracy 100%, length 10, depth 2)
Algorithm stopped (30443 descriptions tested).

