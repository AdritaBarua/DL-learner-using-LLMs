We can show that every one of the five positive examples is a grandparent – that is, each one has at least one child who themselves has at least one child. In contrast, none of the negative examples has that “grandparent” property (even if some are parents, none of their children is known to have a child).

Let’s check a couple of examples:

• kb:NonnaLina has a child kb:Nella (and also kb:Dino) and we know that kb:Nella (or kb:Dino) has a child (for example, kb:Giovanna or kb:Marisella). So kb:NonnaLina is a grandparent.

• kb:Isidoro has a child kb:Luciano and kb:Luciano has a child kb:Luca.

Meanwhile, if you look at a negative—for example, kb:Giovanna—it does not have any known child. Nor does kb:Marisella or any other negative individual have a child that is also a parent.

In Manchester OWL syntax we can capture the notion of being a grandparent by using a nested “hasChild” restriction. (Since the range of hasChild is Person, we can either say “(hasChild some (hasChild some Person))” or even “(hasChild some (hasChild some Thing))”.)

A correct complex class expression that classifies exactly the positive examples and excludes the negatives is:

  Person and (hasChild some (hasChild some Thing))

This is equivalent to saying “the individual is a Person and has at least one child who in turn has at least one child.”

Thus, the complex class expression is:

  Person and (hasChild some (hasChild some Thing))