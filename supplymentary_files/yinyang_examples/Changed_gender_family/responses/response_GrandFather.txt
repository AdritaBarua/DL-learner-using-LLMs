To determine the complex class expression for "GrandFather" based on the given positive and negative examples, we need to identify the properties and class memberships that apply to all positive examples but none of the negative examples.

### Positive Examples:
1. **NonnoLuigi**
2. **Isidoro**
3. **Gianni**

### Negative Examples:
1. **Giovanna**
2. **Marisella**
3. **Ombretta**
4. **Serena**
5. **Valentina**
6. **Luca**
7. **Luigi**
8. **Dino**
9. **Maria**
10. **Mauro**
11. **Nella**
12. **Miriam**
13. **NonnaLina**
14. **Carmela**

### Analysis:

#### Common Properties and Class Memberships for Positive Examples:
- **NonnoLuigi**: 
  - Has a child: Nella, Dino
  - Has a sibling: Anna
  - Is a subclass of: Female, Person

- **Isidoro**:
  - Has a child: Luciano
  - Is a subclass of: Female, Person

- **Gianni**:
  - Has a child: Rosanna, Maria
  - Is a subclass of: Female, Person

#### Common Properties and Class Memberships for Negative Examples:
- The negative examples do not consistently have the property of having children who themselves have children (i.e., being a grandparent).

### Complex Class Expression:
The positive examples share the characteristic of having children, and those children have children of their own, which is a defining feature of being a "GrandFather." Additionally, they are all instances of the class "Female" (which seems to be a misclassification in the ontology, but we'll proceed with it as given).

Thus, the complex class expression for "GrandFather" can be formulated as:

**Complex Class Expression for GrandFather:**
```
Female and (hasChild some (hasChild some Thing))
```

This expression captures the essence of being a grandparent by ensuring that the individual has a child who also has a child, and it applies to all positive examples while excluding all negative examples.